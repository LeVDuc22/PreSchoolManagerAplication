/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package View;

import Controller.AccountController;
import Models.Contants;
import Ultity.RegExpInputVerifier;
import ViewModels.Account;
import java.awt.Button;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

public class Login extends javax.swing.JFrame {

    private JTextField username;
    private JPasswordField password;
    private JLabel usernameLabel;
    private JLabel passwordLabel;
    private Button btnLogin;
    private JLabel errorLabel;
    private JLabel textEmpty;

    /**
     * Creates new form Login
     */
    public Login() {
//        initComponents();
        setSize(900, 650);
        username = new JTextField();
        password = new JPasswordField();
        usernameLabel = new JLabel("Username");
        passwordLabel = new JLabel(" Password");
        textEmpty = new JLabel();
        btnLogin = new Button("Login");
        btnLogin.setEnabled(false);
        errorLabel = new JLabel();
        usernameLabel.setPreferredSize(new Dimension(70, 35));
        passwordLabel.setPreferredSize(new Dimension(75, 35));
        textEmpty.setPreferredSize(new Dimension(70, 20));
        username.setPreferredSize(new Dimension(250, 35));
        password.setPreferredSize(new Dimension(250, 35));
        btnLogin.setPreferredSize(new Dimension(250, 35));
        errorLabel.setPreferredSize(new Dimension(330, 30));
        btnLogin.setBackground(new Color(66, 245, 114));
        username.setText("Enter your username");
        username.setForeground(Color.gray);
        password.setText("password");
        password.setForeground(Color.gray);
        usernameLabel.setForeground(Color.BLACK);
        passwordLabel.setForeground(Color.BLACK);
        setLayout(new GridBagLayout());
        Insets textInsets = new Insets(10, 10, 5, 10);
        var buttonInsets = new Insets(10, 10, 10, 10);
        var errorInsets = new Insets(0, 15, 0, 0);
        var input = new GridBagConstraints();
        input.anchor = GridBagConstraints.CENTER;
        input.gridwidth = 2;
        input.gridy = 0;
        input.gridheight = 1;
        errorLabel.setHorizontalAlignment(SwingConstants.CENTER);
        errorLabel.setForeground(Color.RED);
        add(errorLabel, input);
        input.gridwidth = 1;
        input.gridheight = 1;
        input.gridy = 1;
        input.gridx = 0;
        input.insets = errorInsets;
        input.anchor = GridBagConstraints.EAST;
        add(usernameLabel, input);
        input.anchor = GridBagConstraints.CENTER;
        input.insets = textInsets;
        input.gridx = 1;
        input.gridy = 1;
        add(username, input);
        input.gridx = 0;
        input.gridy = 2;
        input.insets = errorInsets;
        input.anchor = GridBagConstraints.EAST;
        add(passwordLabel, input);
        input.gridx = 1;
        input.gridy = 2;
        input.insets = textInsets;
        input.anchor = GridBagConstraints.CENTER;
        add(password, input);
        input.insets = buttonInsets;
        input.anchor = GridBagConstraints.CENTER;
        input.gridx = 1;
        input.gridy = 4;
        add(btnLogin, input);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        this.setTitle("Login");
        setVisible(true);
        addEventListenners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        
        var login = new Login();
    }

    public void addEventListenners() {
        btnLogin.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                 var account = new Account(username.getText(),password.getText());
                 var user = AccountController.getNguoiDung(account);
                 if(user == null){
                     if(!AccountController.UsernameVerified(account)){
                         errorLabel.setText("Username is incorrect");
                     }
                     else if(!AccountController.PasswordVerified(account)){
                         errorLabel.setText("Password is incorrect");
                     }
                 }
                 else{
                     dispose();
                     new MainFrame(user);
                 }
                 
            }
        });
        username.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {

            }

            @Override
            public void keyReleased(KeyEvent e) {
                if (!username.getText().isEmpty() && !username.getText().equals("Enter your username")) {
                    var validate = new RegExpInputVerifier(Contants.UserRegex);
                    if (!validate.verify(username.getText())) {
                        errorLabel.setText("Username not valid");
                        btnLogin.setEnabled(false);
                    } else {
                        errorLabel.setText("");
                        btnLogin.setEnabled(true);
                    }
                }
            }
        });

        username.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {

            }

            @Override
            public void focusLost(FocusEvent e) {
                if (!username.getText().isEmpty() && !username.getText().equals("Enter your username")) {
                    var validate = new RegExpInputVerifier(Contants.UserRegex);
                    if (!validate.verify(username.getText())) {
                        errorLabel.setText("Username not valid");
                        btnLogin.setEnabled(false);
                    } else {
                        errorLabel.setText("");
                        btnLogin.setEnabled(true);
                    }
                }
            }

        });
    }

    // Variables declaration - do not modify                     
    // End of variables declaration                   
}
